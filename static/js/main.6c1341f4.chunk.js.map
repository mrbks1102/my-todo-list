{"version":3,"sources":["components/Todoitem.tsx","components/TodoList.tsx","components/TodoInput.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Todoitem","todo","handleDone","handleDelete","className","done","type","onClick","defaultChecked","title","TodoList","todos","settodos","prev","map","t","id","filter","length","TodoInput","useState","inputTitle","setInputTitle","count","setCount","value","onChange","e","target","initialState","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qOA8BeA,EArBmB,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,KAAMC,EAA+B,EAA/BA,WAAYC,EAAmB,EAAnBA,aAErD,OACE,qBAAIC,UAAWH,EAAKI,KAAO,OAAS,GAApC,UACE,kCACE,uBACEC,KAAK,WACLF,UAAU,iBACVG,QAAS,kBAAML,EAAWD,IAC1BO,eAAgBP,EAAKI,OAEvB,sBAAMD,UAAU,iBAAhB,SAAkCH,EAAKQ,WAEzC,wBACEF,QAAS,kBAAMJ,EAAaF,IAC5BG,UAAU,gBAFZ,8BCsBSM,EAnCmB,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAEpCV,EAAa,SAACD,GAClBW,GAAS,SAAAC,GAAI,OAAIA,EAAKC,KAAI,SAAAC,GAAC,OACzBA,EAAEC,KAAOf,EAAKe,GAAd,2BACSf,GADT,IACeI,MAAOJ,EAAKI,OACvBU,SAIFZ,EAAe,SAACF,GACpBW,GAAS,SAAAC,GAAI,OAAIA,EAAKI,QAAO,SAAAF,GAAC,OAC5BA,EAAEC,KAAOf,EAAKe,UAIlB,OACE,qBAAKZ,UAAU,QAAf,SAEIO,EAAMO,QAAU,EAAI,+EAClB,oBAAId,UAAU,YAAd,SACGO,EAAMG,KAAI,SAAAb,GAAI,OACb,cAAC,EAAD,CAEEA,KAAMA,EACNE,aAAcA,EACdD,WAAYA,GAHPD,EAAKe,Y,OCgBXG,EAxCoB,SAAC,GAAyB,IAAvBP,EAAsB,EAAtBA,SAAUD,EAAY,EAAZA,MAAY,EACtBS,mBAAiB,IADK,mBACnDC,EADmD,KACvCC,EADuC,OAEhCF,mBAAiBT,EAAMO,OAAS,GAFA,mBAEnDK,EAFmD,KAE5CC,EAF4C,KAuB1D,OACE,8BACE,qBAAKpB,UAAU,YAAf,SACE,sBAAKA,UAAU,QAAf,UACE,uBACEE,KAAK,OACLF,UAAU,QACVqB,MAAOJ,EACPK,SA1BgB,SAACC,GACzBL,EAAcK,EAAEC,OAAOH,UA2BjB,wBAAQlB,QAxBK,WACnBiB,EAASD,EAAQ,GAQjBX,EAAS,CANa,CACpBI,GAAIO,EACJd,MAAOY,EACPhB,MAAM,IAGA,mBAAcM,KACtBW,EAAc,KAcuBlB,UAAU,iBAAzC,kCCnCJyB,G,MAAuB,CAC3B,CACEb,GAAI,EACJP,MAAO,mBACPJ,MAAM,GACL,CACDW,GAAI,EACJP,MAAO,yBACPJ,MAAM,KAeKyB,EAXO,WAAO,IAAD,EACAV,mBAASS,GADT,mBACnBlB,EADmB,KACZC,EADY,KAG1B,OACE,gCACE,cAAC,EAAD,CAAWD,MAAOA,EAAOC,SAAUA,IACnC,cAAC,EAAD,CAAUD,MAAOA,EAAOC,SAAUA,QCVzBmB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.6c1341f4.chunk.js","sourcesContent":["import React from 'react'\nimport { Todo } from '../Types'\n\ntype Props = {\n  todo: Todo\n  handleDone: (todo: Todo) => void\n  handleDelete: (todo: Todo) => void\n}\n\nconst Todoitem: React.FC<Props> = ({ todo, handleDone, handleDelete }) => {\n\n  return (\n    <li className={todo.done ? 'done' : ''}>\n      <label>\n        <input\n          type=\"checkbox\"\n          className=\"checkbox-input\"\n          onClick={() => handleDone(todo)}\n          defaultChecked={todo.done}\n        />\n        <span className=\"checkbox-label\">{todo.title}</span>\n      </label>\n      <button\n        onClick={() => handleDelete(todo)}\n        className=\"btn is-delete\"\n      >削除</button>\n    </li>\n  )\n}\n\nexport default Todoitem\n","import React from 'react'\nimport Todoitem from './Todoitem'\nimport { Todo } from '../Types'\n\ntype Props = {\n  todos: Todo[]\n  settodos: React.Dispatch<React.SetStateAction<Todo[]>>\n}\n\nconst TodoList: React.FC<Props> = ({ todos, settodos }) => {\n\n  const handleDone = (todo: Todo) => {\n    settodos(prev => prev.map(t =>\n      t.id === todo.id\n        ? { ...todo, done: !todo.done }\n        : t\n    ))\n  }\n\n  const handleDelete = (todo: Todo) => {\n    settodos(prev => prev.filter(t =>\n      t.id !== todo.id\n    ))\n  }\n\n  return (\n    <div className=\"inner\">\n      {\n        todos.length <= 0 ? '登録されたTODOはありません。' :\n          <ul className=\"todo-list\">\n            {todos.map(todo => (\n              <Todoitem\n                key={todo.id}\n                todo={todo}\n                handleDelete={handleDelete}\n                handleDone={handleDone}\n              />\n            ))}\n          </ul>\n      }\n    </div>\n  )\n}\n\nexport default TodoList\n","import React, { useState } from 'react'\nimport { Todo } from '../Types'\n\ntype Props = {\n  settodos: React.Dispatch<React.SetStateAction<Todo[]>>\n  todos: Todo[]\n}\n\nconst TodoInput: React.FC<Props> = ({ settodos, todos }) => {\n  const [inputTitle, setInputTitle] = useState<string>('')\n  const [count, setCount] = useState<number>(todos.length + 1)\n\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setInputTitle(e.target.value)\n  }\n\n  const handleSubmit = () => {\n    setCount(count + 1)\n\n    const newtodo: Todo = {\n      id: count,\n      title: inputTitle,\n      done: false\n    }\n\n    settodos([newtodo, ...todos])\n    setInputTitle('')\n\n  }\n\n  return (\n    <div>\n      <div className=\"inputForm\">\n        <div className=\"inner\">\n          <input\n            type=\"text\"\n            className=\"input\"\n            value={inputTitle}\n            onChange={handleInputChange}\n          />\n          <button onClick={handleSubmit} className=\"btn is-primary\">追加</button>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default TodoInput\n","import React, { useState } from 'react'\nimport TodoList from './components/TodoList'\nimport TodoInput from './components/TodoInput'\nimport { Todo } from './Types'\nimport './App.css'\n\nconst initialState: Todo[] = [\n  {\n    id: 2,\n    title: '次のTodo',\n    done: false\n  }, {\n    id: 1,\n    title: '最初のTodo',\n    done: true\n  }\n]\n\nconst App: React.FC = () => {\n  const [todos, settodos] = useState(initialState)\n\n  return (\n    <div>\n      <TodoInput todos={todos} settodos={settodos} />\n      <TodoList todos={todos} settodos={settodos} />\n    </div>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}